<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.plantynet.warning.sql.monitoringMapper">

	<resultMap id="monitoringVO" type="com.plantynet.warning.vo.MonitoringVO">
		<result property="ntfcId" column="ntfc_id" javaType="int"/>
        <result property="serverId" column="server_id" javaType="int"/>
        <result property="managerId" column="manager_id" javaType="int"/>
        <result property="managerNm" column="manager_nm" javaType="String"/>
        <result property="eventId" column="event_id" javaType="int"/>
        <result property="serverNm" column="server_nm" javaType="String"/>
        <result property="eventCode" column="event_code" javaType="String"/>
        <result property="ntfcMth" column="ntfc_mth" javaType="String"/>
        <result property="managerEmail" column="manager_email" javaType="String"/>
        <result property="managerCttpc" column="manager_cttpc" javaType="String"/>
    </resultMap>

	<!-- '일주일 전 날짜 ~ 오늘날짜 ' 출력-->
	<select id="getDate" resultType="String">
        SELECT CONCAT(DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -6 DAY), '%Y-%m-%d'), " ~ ", DATE_FORMAT(NOW(),'%Y-%m-%d')) AS date
    </select>

	<!-- 카테고리에 들어갈 서버 목록 -->
	<select id="getServerList" resultType="com.plantynet.warning.vo.MonitoringVO" resultMap="monitoringVO">
        SELECT server_id, server_nm
        FROM SERVER
        WHERE team_id=#{teamId}
    </select>
    
    <!-- 카테고리에 들어갈 해당 서버의 에러코드 목록 -->
    <select id="getCodeList" resultType="com.plantynet.warning.vo.MonitoringVO" resultMap="monitoringVO">
        SELECT event_id, event_code
        FROM EVENT
        WHERE server_id=#{serverId}
    </select>

	<!-- Global Line Chart : 사용자가 속해있는 팀의 서버에서 index일 전에 발생한 에러의 총 건수를 출력 -->
	<select id="getGlobalLineStat" parameterType="hashmap" resultType="com.plantynet.warning.vo.MonitoringVO" resultMap="monitoringVO">
        SELECT s.server_nm, DATE_FORMAT(NOW(), '%Y-%m-%d') - INTERVAL ${index} DAY AS rgsde ,IFNULL(count(*), 0) AS count
		FROM EVENT_HISTORY e, SERVER s
		WHERE s.server_id = e.server_id
		AND DATE_FORMAT(e.rgsde, '%Y-%m-%d')=DATE_FORMAT(NOW(), '%Y-%m-%d') - INTERVAL ${index} DAY
		AND s.team_id=${teamId}
    </select>
    
    <!-- Global Line Chart Tooltip : 사용자가 속해있는 팀의 서버에서 해당일에 발생한 서버 TOP5의 이름과 에러 건수를 출력 -->
	<select id="getTopServer" parameterType="hashmap" resultType="com.plantynet.warning.vo.MonitoringVO" resultMap="monitoringVO">
        SELECT server_id, count(*) AS count
        FROM EVENT_HISTORY
        WHERE DATE_FORMAT(rgsde, '%Y-%m-%d') = FROM_UNIXTIME(FLOOR(${rgsde}/1000), '%Y-%m-%d')
        AND server_id = #{serverId}
        GROUP BY server_id
        ORDER BY count DESC
        LIMIT 5
    </select>
    
    <!-- Global Bar Chart : 사용자가 속해있는 팀의 서버에서 바 그래프의 데이터를 출력 -->
    <select id="getGlobalBarStat" resultType="com.plantynet.warning.vo.MonitoringVO" resultMap="monitoringVO">
        SELECT server_id, count(*) AS count
        FROM EVENT_HISTORY
        WHERE rgsde > (CURDATE() - INTERVAL 7 DAY)
        AND server_id=#{serverId}
        GROUP BY server_id
        ORDER BY count DESC
        LIMIT 5
    </select>
    
    <!-- 전체 에러로그의 목록 출력 -->
    <select id="getErrorLogList" resultType="com.plantynet.warning.vo.MonitoringVO" resultMap="monitoringVO">
        SELECT n.server_id, s.server_nm, n.ip, e.event_code, m.manager_nm, n.msg, n.ntfc_mth, n.ntfcde, n.logde
        FROM SERVER s, MANAGER m, NOTIFICATION_HISTORY n, EVENT e
		WHERE n.server_id=s.server_id
		AND n.event_id=e.event_id
		AND n.manager_id=m.manager_id
		AND m.team_id=#{teamId}
    </select>
    
    <!-- 서버의 간단한 정보 출력(지금은 사용하지 않음, 삭제예정) -->
    <select id="getServerInfo" resultType="com.plantynet.warning.vo.MonitoringVO" resultMap="monitoringVO">
        SELECT server_nm, ip
        FROM SERVER
        WHERE server_id=#{serverId}
    </select>
    
    <!-- Server Line Chart : 오늘을 포함한 일주일 전까지 한 서버(serverId)에서 발생한 모든 에러 건수 -->
    <select id="getErrorLineStat" resultType="com.plantynet.warning.vo.MonitoringVO" resultMap="monitoringVO">
		SELECT 
			TT.date as rgsde,
    		IFNULL(CT.cnt, 0) AS count
		FROM 
			(	
			SELECT 
				DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -ROWNUM+1 DAY), '%m/%d') AS date
			FROM 
				(
				SELECT 
                	DATE_FORMAT(NOW(), '%m/%d') as rgsde
				) A 
			INNER JOIN 	
				(	
				SELECT
					<![CDATA[
					@ROWNUM := @ROWNUM + 1 AS ROWNUM
					FROM NOTIFICATION_HISTORY, (SELECT @ROWNUM := 0) R
					]]>
            		ORDER BY ntfc_id ASC
            		LIMIT 7
				) B
			ON 1 = 1
			) TT
			LEFT OUTER JOIN
				(
				SELECT 
        			DATE_FORMAT(rgsde, '%m/%d') AS rgsde,
        			server_id,
        			COUNT(*) AS cnt
				FROM
					EVENT_HISTORY 
    			WHERE server_id=#{serverId}
				GROUP BY DATE_FORMAT(rgsde, '%m/%d')	
			) CT
			ON TT.date = CT.rgsde	
			WHERE TT.date BETWEEN  DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -6 DAY), '%m/%d') 
			AND DATE_FORMAT(NOW(), '%m/%d')
			ORDER BY rgsde ASC
    </select>
    
    <!-- Server Line Chart Tooltip : 사용자가 속해있는 팀의 서버에서 해당일에 발생한 에러 TOP5의 이름과 건수를 출력 -->
    <select id="getTopCode" parameterType="hashmap" resultType="com.plantynet.warning.vo.MonitoringVO" resultMap="monitoringVO">
        SELECT h.event_id AS event_id, e.event_code AS event_code, count(*) AS count
        FROM EVENT_HISTORY h, EVENT e
        WHERE DATE_FORMAT(h.rgsde, '%m/%d') LIKE #{rgsde}
        AND e.event_id=h.event_id
        AND h.server_id=#{serverId}
        GROUP BY h.event_id
        ORDER BY count DESC
        LIMIT 5;
    </select>
    
    <!-- Server Bar Chart : 오늘로부터 7일 이전까지 한 서버(serverId)에서 발생한 에러코드를 건수가 가장 많은 순서대로 5개를 추출 -->
    <select id="getErrorBarStat" resultType="com.plantynet.warning.vo.MonitoringVO" resultMap="monitoringVO">
        SELECT h.event_id AS event_id, e.event_code AS event_code, count(*) AS count
        FROM EVENT_HISTORY h, EVENT e
        WHERE h.rgsde > (CURDATE() - INTERVAL 6 DAY)
        AND h.server_id=#{serverId}
        AND h.event_id=e.event_id
        GROUP BY h.event_id
        ORDER BY count DESC
        LIMIT 5
    </select>
    
    <select id="getErrorLineHover" parameterType="hashmap" resultType="com.plantynet.warning.vo.MonitoringVO" resultMap="monitoringVO">
        SELECT event_code, count(*) AS count
        FROM NOTIFICATION_HISTORY
		WHERE DATE_FORMAT(rgsde, '%Y-%m-%d')=DATE_FORMAT(NOW(), '%Y-%m-%d') - INTERVAL ${index} DAY
        AND server_id=#{serverId}
        GROUP BY event_id
        ORDER BY count DESC
        LIMIT 5
    </select>


</mapper>